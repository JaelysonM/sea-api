"""empty message

Revision ID: dce3f5bcc18f
Revises: 6589bd3a2a97
Create Date: 2025-02-02 23:49:25.655128

"""
import os
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "dce3f5bcc18f"
down_revision = "6589bd3a2a97"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sections",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("store_id", sa.Integer(), nullable=False),
        sa.Column(
            "title", sa.String(length=255), nullable=False
        ),
        sa.Column(
            "description",
            sa.String(length=255),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["store_id"], ["stores.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "products",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "section_id", sa.Integer(), nullable=False
        ),
        sa.Column(
            "name", sa.String(length=255), nullable=False
        ),
        sa.Column(
            "description",
            sa.String(length=255),
            nullable=True,
        ),
        sa.Column(
            "photo", sa.String(length=255), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["sections.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "products_variants",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "product_id", sa.Integer(), nullable=False
        ),
        sa.Column(
            "name", sa.String(length=255), nullable=False
        ),
        sa.Column(
            "description",
            sa.String(length=255),
            nullable=True,
        ),
        sa.Column("min_price", sa.Float(), nullable=False),
        sa.Column("max_price", sa.Float(), nullable=False),
        sa.Column("duration", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", "product_id"),
    )
    # ### end Alembic commands ###
    script_path = os.path.abspath(
        os.path.join(
            os.path.dirname(__file__),
            "..",
            "sql",
            "dce3f5bcc18f" + ".sql",
        )
    )
    if os.path.exists(script_path):
        with open(script_path, "r") as f:
            script_content = f.read()

        conn = op.get_bind()
        if conn.dialect.name == "sqlite":

            conn.connection.executescript(script_content)
        else:
            op.execute(script_content)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("products_variants")
    op.drop_table("products")
    op.drop_table("sections")
    # ### end Alembic commands ###

"""empty message

Revision ID: a460a64f0dc5
Revises: af8196ee24d6
Create Date: 2025-07-05 16:54:47.010096

"""
import os
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "a460a64f0dc5"
down_revision = "af8196ee24d6"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "scales",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "name", sa.String(length=255), nullable=False
        ),
        sa.Column(
            "serial", sa.String(length=255), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("serial"),
    )
    op.create_table(
        "foods",
        sa.Column(
            "id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "name", sa.String(length=255), nullable=False
        ),
        sa.Column(
            "description",
            sa.String(length=255),
            nullable=True,
        ),
        sa.Column(
            "photo", sa.String(length=255), nullable=True
        ),
        sa.Column("calories", sa.Float(), nullable=False),
        sa.Column("carbs", sa.Float(), nullable=False),
        sa.Column("fat", sa.Float(), nullable=False),
        sa.Column("protein", sa.Float(), nullable=False),
        sa.Column("scale_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["scale_id"],
            ["scales.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###
    script_path = os.path.abspath(
        os.path.join(
            os.path.dirname(__file__),
            "..",
            "sql",
            "a460a64f0dc5" + ".sql",
        )
    )
    if os.path.exists(script_path):
        with open(script_path, "r") as f:
            script_content = f.read()

        conn = op.get_bind()
        if conn.dialect.name == "sqlite":

            conn.connection.executescript(script_content)
        else:
            op.execute(script_content)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("foods")
    op.drop_table("scales")
    # ### end Alembic commands ###

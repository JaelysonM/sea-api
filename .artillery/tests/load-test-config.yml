config:
  phases:
    - duration: 60
      arrivalRate: 5
      rampTo: 10
      name: Warm up phase
    - duration: 60
      arrivalRate: 10
      rampTo: 50
      name: Ramp up to peak load
    - duration: 120
      arrivalRate: 50
      name: Sustained peak load
  payload:
    - path: '../schedule-data.csv'
      fields:
        - 'token'
        - 'serial'
        - 'data'
      loadAll: true
      name: schedule # refer to the data as "auth"
    - path: '../fans-data.csv'
      fields:
        - 'token'
        - 'serial'
      loadAll: true
      name: fans # refer to the data as "auth"
    - path: '../videos-data.csv'
      fields:
        - 'token'
        - 'serial'
        - 'data'
        - 'videos'
      loadAll: true
      name: videos # refer to the data as "auth"
  processor: '../tests/random-values.js' # Arquivo com a função personalizada

scenarios:
  - name: 'Teste de carga com fãs'
    flow:
      - loop:
          - get:
              url: '/fans/external/{{ $loopElement.serial }}/schedule/videos?data={{ $loopElement.data }}'
              headers:
                Authorization: 'Bearer {{ $loopElement.token }}'
        over: schedule

  - name: 'Teste de carga para logs'
    flow:
      - loop:
          - post:
              url: '/fans/external/{{ $loopElement.serial }}/logs'
              headers:
                Authorization: 'Bearer {{ $loopElement.token }}'
              beforeRequest: getRandomTemperature
              json:
                descricao: "Fan temperature is: {{ temperature }} Celsius"
                dados: 
                  temperatura:
                    unidade: Graus
                    medida: "{{ temperature }}"
                codigo_evento: "medicao"
        over: fans
  - name: 'Teste de carga para criar fans'
    flow:
      - loop:
          - post:
              url: '/fans/external'
              headers:
                Authorization: 'Bearer {{ $loopElement.token }}'
              beforeRequest: getRandomFan
              json:
                serial: '{{ data.serial }}'
                nome: '{{ data.nome }}'
                status: '{{ data.status }}'
                x_coord: '{{ data.x_coord }}'
                y_coord: '{{ data.y_coord }}'
        over: fans
  - name: 'Teste de para enviar contagem de inserções dos fans'
    flow:
      - loop:
          - put:
              url: '/fans/external/{{ $loopElement.serial }}/schedule/count'
              headers:
                Authorization: 'Bearer {{ $loopElement.token }}'
              beforeRequest: decodeBase64ToJSON
              json:
                data: '{{ $loopElement.data }}'
                contratos: '{{ data.contratos }}'
        over: videos